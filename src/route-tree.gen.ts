/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PrivateLayoutRouteImport } from './routes/_private/layout'
import { Route as LandingPageIndexRouteImport } from './routes/_landing-page/index'
import { Route as AuthenticationSignInRouteImport } from './routes/_authentication/sign-in'
import { Route as PrivateMembersIndexRouteImport } from './routes/_private/members/index'
import { Route as PrivateDashboardIndexRouteImport } from './routes/_private/dashboard/index'

const PrivateLayoutRoute = PrivateLayoutRouteImport.update({
  id: '/_private',
  getParentRoute: () => rootRouteImport,
} as any)
const LandingPageIndexRoute = LandingPageIndexRouteImport.update({
  id: '/_landing-page/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticationSignInRoute = AuthenticationSignInRouteImport.update({
  id: '/_authentication/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const PrivateMembersIndexRoute = PrivateMembersIndexRouteImport.update({
  id: '/members/',
  path: '/members/',
  getParentRoute: () => PrivateLayoutRoute,
} as any)
const PrivateDashboardIndexRoute = PrivateDashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => PrivateLayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/sign-in': typeof AuthenticationSignInRoute
  '/': typeof LandingPageIndexRoute
  '/dashboard': typeof PrivateDashboardIndexRoute
  '/members': typeof PrivateMembersIndexRoute
}
export interface FileRoutesByTo {
  '/sign-in': typeof AuthenticationSignInRoute
  '/': typeof LandingPageIndexRoute
  '/dashboard': typeof PrivateDashboardIndexRoute
  '/members': typeof PrivateMembersIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_private': typeof PrivateLayoutRouteWithChildren
  '/_authentication/sign-in': typeof AuthenticationSignInRoute
  '/_landing-page/': typeof LandingPageIndexRoute
  '/_private/dashboard/': typeof PrivateDashboardIndexRoute
  '/_private/members/': typeof PrivateMembersIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/sign-in' | '/' | '/dashboard' | '/members'
  fileRoutesByTo: FileRoutesByTo
  to: '/sign-in' | '/' | '/dashboard' | '/members'
  id:
    | '__root__'
    | '/_private'
    | '/_authentication/sign-in'
    | '/_landing-page/'
    | '/_private/dashboard/'
    | '/_private/members/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  PrivateLayoutRoute: typeof PrivateLayoutRouteWithChildren
  AuthenticationSignInRoute: typeof AuthenticationSignInRoute
  LandingPageIndexRoute: typeof LandingPageIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_private': {
      id: '/_private'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PrivateLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_landing-page/': {
      id: '/_landing-page/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LandingPageIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authentication/sign-in': {
      id: '/_authentication/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof AuthenticationSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_private/members/': {
      id: '/_private/members/'
      path: '/members'
      fullPath: '/members'
      preLoaderRoute: typeof PrivateMembersIndexRouteImport
      parentRoute: typeof PrivateLayoutRoute
    }
    '/_private/dashboard/': {
      id: '/_private/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof PrivateDashboardIndexRouteImport
      parentRoute: typeof PrivateLayoutRoute
    }
  }
}

interface PrivateLayoutRouteChildren {
  PrivateDashboardIndexRoute: typeof PrivateDashboardIndexRoute
  PrivateMembersIndexRoute: typeof PrivateMembersIndexRoute
}

const PrivateLayoutRouteChildren: PrivateLayoutRouteChildren = {
  PrivateDashboardIndexRoute: PrivateDashboardIndexRoute,
  PrivateMembersIndexRoute: PrivateMembersIndexRoute,
}

const PrivateLayoutRouteWithChildren = PrivateLayoutRoute._addFileChildren(
  PrivateLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  PrivateLayoutRoute: PrivateLayoutRouteWithChildren,
  AuthenticationSignInRoute: AuthenticationSignInRoute,
  LandingPageIndexRoute: LandingPageIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
